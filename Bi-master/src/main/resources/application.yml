spring:
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    # todo 取消注释开启分布式 session（须先配置 Redis）
    # store-type: redis
    # 1 天过期
    timeout: 86400
  # 数据库配置
  # todo 需替换配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/logistics?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 10
      min-idle: 10
      max-active: 30
      max-wait: 6000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 30000
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filter:
        slf4j:
          enabled: true
  # Redis 配置
  # todo 需替换配置，然后取消注释
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
  # rabbitmq 信息
  # TODO 修改成自己的配置
  rabbitmq:
    host: localhost
    password: 123456
    username: root
    port: 5672
    listener:
      direct:
        acknowledge-mode: manual
  data:
    redis:
      database: 1
      host: localhost
      port: 6379
      password: 123456
      timeout: 5000


#DASDA
server:
  address: 0.0.0.0
  port: 8080
  servlet:
    context-path: /api
    # cookie 30 天过期
    session:
      cookie:
        max-age: 2592000
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 对象存储
# todo 需替换配置
cos:
  client:
    accessKey: xxx
    secretKey: xxx
    region: xxx
    bucket: xxx

# 要使用的模型ID
ai:
  model:
    model-id: 1660100329896673281
# 鱼聪明SDK

#yuapi:
#  client:
#    access_key: gr86i5u3vt18aj06zq7c80k5qtddxbu8
#    secret_key: upcu9s1tx0qwcgfyh5zp6h3mcugymgu3

aliyun:
  oss:
    file:
      endpoint: xxxxxxxxxxxxxxx
      keyid: xxxxxxxxxxxxxxx
      keysecret: xxxxxxxxxxxxxxx
      bucketname: xxxxxxxxxxxxxxx
